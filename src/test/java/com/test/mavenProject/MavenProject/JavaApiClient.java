package com.test.mavenProject.MavenProject;
import java.net.URL;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;

/**
* <h1>A Java API Client for Jira</h1>
* The JavaApiClient program (called Automate in the accompanying video) is a 
* simple API client for the Atlassian Jira APIs.
* It performs five functions in the following order:
* <p><ol>
* <li> Log into Jira
* <li> Parse and save the JSESSIONID
* <li> Call a Jira API to get data (using the JSESSIONID to authenticate)
* <li> Convert the returned data from JSON into CSV format
* <li> Save the CSV to a file
* </ol><p>
* @author  John Potter
* @version 1.0
* @since   2019-05-16
* @see <a href="https://www.youtube.com/playlist?list=PLO2rlkUncpGLtUhjE2IcAGZSvVn7JBBvt">YouTube playlist showing development of this API client</a>
*/
public class JavaApiClient {
    
    
   /**
   * This is the main method.  It creates the variables used through the
   * calls to the five functions and calls them in the proper order.  It 
   * also handles any errors and writes a final SUCCESS or FAILURE message.
   *
   * @param args Unused.
   */
    public static void main(String[] args){
    
        String loginResponse = "";
        // Change the baseURL to your own jira server's address and port number
        // Note: adding "rest/" at the end may not be necessary in your 
        //       environment
        String baseURL = "https://seleniumjenkins.atlassian.net/rest";
        String loginURL = "auth/1/session";
        // The loginUserName and loginPassWord are the credentials for a user
        // who has permission to view the issues that you wish to export.
        String loginUserName = "bharathkalapakuri@hotmail.com";
        String loginPassWord = "bharath2205";
        boolean errorsOccurred = false;
        if(!errorsOccurred)
        {
            loginResponse = loginToJira(baseURL, loginURL, loginUserName, loginPassWord);
            if(loginResponse == "ERROR") { errorsOccurred = true; }
        }
               if(!errorsOccurred)
        {
            System.out.println("SUCCESS");

        } else {
            System.out.println("FAILURE");
        }
    }
    

   /**
   * This method takes the user's credentials and uses them to make a request 
   * to log into a given Jira instance.  It returns the response generated from
   * that request.
   *
   * @param baseURL The protocol, server name, and port number on which Jira is 
   * running suffixed with "/jira/" or /jira/rest/" 
   * (e.g., http://company.loc:2990/jira/rest/)
   * @param loginURL The standard path to the login API for a Jira server which 
   * will be suffixed to the baseURL (e.g., auth/1/session)
   * @param loginUserName The username of a user who has permissions to view the
   * issues which we would like to export out of Jira.
   * @param loginPassWord The password associated with the user named in 
   * loginUserName.
   *
   * @return loginResponse The response generated by Jira and returned when this 
   * method submits its login request.
   */
    public static String loginToJira(String baseURL, String loginURL, String loginUserName, String loginPassWord){
        String loginResponse = "";
        URL url = null;
        HttpURLConnection conn = null;
        String input = "";
        OutputStream os = null;
        BufferedReader br = null;
        String output = null;

        try {
            // Create URL object
            url = new URL(baseURL + loginURL);
            // Use the URL to create connection
            conn = (HttpURLConnection) url.openConnection();
            
            // Set properties
            conn.setDoOutput(true);
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            
            // Create JSON post data
            input = "{\"username\":\"" + loginUserName + "\", \"password\":\"" + loginPassWord + "\"}";
            
            // Send our request
            os = conn.getOutputStream();
            os.write(input.getBytes());
            os.flush();
            
            // Handle our response
            if(conn.getResponseCode() == 200){
                br = new BufferedReader(new InputStreamReader((conn.getInputStream())));
                while((output = br.readLine()) != null){
                    loginResponse += output;
                }
                conn.disconnect();
            }
        } catch (Exception ex) {
            System.out.println("Error in loginToJira: " + ex.getMessage());
            loginResponse = "ERROR";
        }
        System.out.println("\nloginResponse:");
        System.out.println(loginResponse);
        String path="{/rest/zapi/latest/execution?projectId=\"MAV\"&versionId=\"1.2.3\"&cycleName=\"TestCycle\"}";
        try {
            url = new URL(baseURL + path);
            // Use the URL to create connection
            conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Content-Type", "application/json");
			
			os = conn.getOutputStream();
	            os.write(path.getBytes());
	            os.flush();
	            
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
                
        return loginResponse;
    }
    
    
   /**
   * This method takes the response from a Jira login request and parses out
   * the JSESSIONID which will be saved and used to authenticate future 
   * requests.
   *
   * @param input The response (in JSON format) from a Jira login request.
   *
   * @return jSessionID The value of the JSESSIONID assigned to this session
   * by the Jira server.
   */
   }